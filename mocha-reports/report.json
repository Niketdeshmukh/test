{
  "stats": {
    "suites": 23,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-08T04:35:48.100Z",
    "end": "2025-01-08T04:35:48.285Z",
    "duration": 185,
    "testsRegistered": 23,
    "passPercent": 8.695652173913043,
    "pendingPercent": 0,
    "other": 22,
    "hasOther": true,
    "skipped": 21,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "253046da-604c-4d33-b208-6fd080fdcc45",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3d920e73-6649-4022-a1c7-bb88150649c0",
          "title": "Basic Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should pass a simple test",
              "fullTitle": "Basic Test should pass a simple test",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(true).to.be.true;",
              "err": {},
              "uuid": "d101ba7e-8efa-497d-a062-b6e6d9e15d4f",
              "parentUUID": "3d920e73-6649-4022-a1c7-bb88150649c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d101ba7e-8efa-497d-a062-b6e6d9e15d4f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a0c28b13-762e-4b98-9081-d6c91d1bc41f",
          "title": "Logo Validation",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should display the dashboard logo\"",
              "fullTitle": "Logo Validation \"before all\" hook for \"should display the dashboard logo\"",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver = await initializeDriver();\nawait driver.pause(30000); // Adjust pause time if necessary",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/validateLogo.test.mjs:8:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "7919e227-c52c-4723-8d1f-d85772dd0792",
              "parentUUID": "a0c28b13-762e-4b98-9081-d6c91d1bc41f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Logo Validation\"",
              "fullTitle": "Logo Validation \"after all\" hook in \"Logo Validation\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Ending the edit details test session...\");\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed.');\n} else {\n    console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "53bb7aeb-acfe-4bb4-9c7a-85c54573a501",
              "parentUUID": "a0c28b13-762e-4b98-9081-d6c91d1bc41f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should display the dashboard logo",
              "fullTitle": "Logo Validation should display the dashboard logo",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Running logo validation test...');\n\nconst logo = await driver.$('//android.widget.ImageView[@content-desc=\"Dashboard logo\"]');\nconsole.log('Found logo element. Waiting for logo to be displayed...');\n\nawait logo.waitForDisplayed({ timeout: 15000 });\nconsole.log('Logo is displayed, verifying visibility...');\n\nconst isLogoDisplayed = await logo.isDisplayed();\nconsole.log('Logo displayed:', isLogoDisplayed);\n\nexpect(isLogoDisplayed, 'Dashboard logo should be visible').to.be.true;",
              "err": {},
              "uuid": "8846e465-2c73-4c40-b82e-3c9f3039fac1",
              "parentUUID": "a0c28b13-762e-4b98-9081-d6c91d1bc41f",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "8846e465-2c73-4c40-b82e-3c9f3039fac1"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "1b8d0781-5442-49e8-8719-30c3c3eb1dc4",
          "title": "User Logout Functionality",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should successfully log out the user\"",
              "fullTitle": "User Logout Functionality \"before all\" hook for \"should successfully log out the user\"",
              "timedOut": false,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver = await initializeDriver();",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/logout.test.mjs:9:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "c26ed988-78e8-4ae3-a8ae-b840b6479fca",
              "parentUUID": "1b8d0781-5442-49e8-8719-30c3c3eb1dc4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Logout Functionality\"",
              "fullTitle": "User Logout Functionality \"after all\" hook in \"User Logout Functionality\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// End WebDriverIO session\nif (driver) {\n    await driver.deleteSession();\n    console.log(\"Driver session ended.\");\n}",
              "err": {},
              "uuid": "9a48a38c-d26a-4f5e-a37a-06a5e3dc03f6",
              "parentUUID": "1b8d0781-5442-49e8-8719-30c3c3eb1dc4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully log out the user",
              "fullTitle": "User Logout Functionality should successfully log out the user",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Click on the Profile button\nconst profileButton = await driver.$(\n    '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[3]/android.view.View[2]'\n);\nawait profileButton.click();\nawait driver.pause(2000);\nconst { width, height } = await driver.getWindowRect();\nawait driver.performActions([\n    {\n        type: \"pointer\",\n        id: \"finger1\",\n        parameters: { pointerType: \"touch\" },\n        actions: [\n            { type: \"pointerMove\", duration: 0, x: width / 2, y: height * 0.8 },\n            { type: \"pointerDown\", button: 0 },\n            { type: \"pointerMove\", duration: 500, x: width / 2, y: height * 0.1 },\n            { type: \"pointerUp\", button: 0 },\n        ],\n    },\n]);\nawait driver.pause(2000);\n// Click on the Logout button\nconst logoutButton = await driver.$(\n    '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.widget.ScrollView/android.view.View/android.view.View[6]/android.widget.Button'\n);\nawait logoutButton.click();\nawait driver.pause(1000);\n    \n// Confirm the logout action\nconst confirmButton = await driver.$(\n    '//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_yes_btn\"]'\n);\n    \n// Wait explicitly for the confirm button to appear\nawait confirmButton.waitForDisplayed({ timeout: 5000 });\n    \nconst isDisplayed = await confirmButton.isDisplayed();\nexpect(isDisplayed).to.be.true; // Validate that confirm button is displayed\n    \nawait confirmButton.click();\nconsole.log(\"Logout successfully!\");",
              "err": {},
              "uuid": "83d1bac9-c3c0-440b-bb8d-69f2836dd7bf",
              "parentUUID": "1b8d0781-5442-49e8-8719-30c3c3eb1dc4",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "83d1bac9-c3c0-440b-bb8d-69f2836dd7bf"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2c24b276-ed86-40f4-a969-5f45c4ee70e0",
          "title": "Unistall and install simple connect",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should uninstall and install the app\"",
              "fullTitle": "Unistall and install simple connect \"before all\" hook for \"should uninstall and install the app\"",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"setting up driver...\");\nthis.timeout(30000);\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\n        await driver.pause(2000);  // Adjust pause time if necessary",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/uninstallReinstall.test.mjs:10:28)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "f0408a9f-8b55-4eb6-85a4-bf5eb43a45e0",
              "parentUUID": "2c24b276-ed86-40f4-a969-5f45c4ee70e0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Unistall and install simple connect\"",
              "fullTitle": "Unistall and install simple connect \"after all\" hook in \"Unistall and install simple connect\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Closing driver session');\nif(driver){\n    await driver.deleteSession();\n    console.log('Driver session closed');\n}else{\n    console.log('Driver session not created. Skipping session cleanup');\n    \n}",
              "err": {},
              "uuid": "3993ec84-14ec-46cf-ba78-ba91d9574d96",
              "parentUUID": "2c24b276-ed86-40f4-a969-5f45c4ee70e0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should uninstall and install the app",
              "fullTitle": "Unistall and install simple connect should uninstall and install the app",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Running log');\nawait driver.removeApp('com.simpleenergy.app');\n        console.log('App uninstalled successfully!');\n\n        // Reinstall the app\n        await driver.installApp(\"./supershare.apk\");\n        console.log('App reinstalled successfully!');",
              "err": {},
              "uuid": "49f92f0f-71ad-488c-88c4-2e07ffa989e2",
              "parentUUID": "2c24b276-ed86-40f4-a969-5f45c4ee70e0",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "49f92f0f-71ad-488c-88c4-2e07ffa989e2"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "43e16469-cdf3-4564-b4fe-15e21682f22b",
          "title": "Splash Screen Validation",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should validate the splash screen is visible\"",
              "fullTitle": "Splash Screen Validation \"before all\" hook for \"should validate the splash screen is visible\"",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log('Setting up driver...');\nthis.timeout(30000); // Allow 30 seconds for setup\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/validateSplashScreen.test.mjs:11:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "9ca3c7cf-429f-4fd0-a175-c1f4c93c5e04",
              "parentUUID": "43e16469-cdf3-4564-b4fe-15e21682f22b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Splash Screen Validation\"",
              "fullTitle": "Splash Screen Validation \"after all\" hook in \"Splash Screen Validation\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Closing driver session...');\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed.');\n} else {\n    console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "3f1d5832-421b-4157-a2e6-d917f6b72dec",
              "parentUUID": "43e16469-cdf3-4564-b4fe-15e21682f22b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should validate the splash screen is visible",
              "fullTitle": "Splash Screen Validation should validate the splash screen is visible",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Re-launching the app...');\nawait driver.pause(2000)\nawait driver.execute('mobile: activateApp', { appId: 'com.simpleenergy.app' });\nconsole.log('App re-launched successfully. Validating splash screen...');\nconst splashScreen = await driver.$('//android.widget.FrameLayout[@resource-id=\"com.simpleenergy.app:id/exo_subtitles\"]/android.view.View');\nawait splashScreen.waitForDisplayed({ timeout: 10000 });\nconsole.log('Splash screen element found. Verifying visibility...');\nconst isSplashScreenDisplayed = await splashScreen.isDisplayed();\nconsole.log('Splash screen visibility:', isSplashScreenDisplayed);\nexpect(isSplashScreenDisplayed, 'Splash screen should be visible').to.be.true;\nif (isSplashScreenDisplayed) {\n    await driver.pause(2500); // Validate splash screen duration\n    console.log('Splash screen duration validated.');\n}",
              "err": {},
              "uuid": "b92d9086-c7b1-4305-b2fc-fe62f8c61deb",
              "parentUUID": "43e16469-cdf3-4564-b4fe-15e21682f22b",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b92d9086-c7b1-4305-b2fc-fe62f8c61deb"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "94e9a478-debe-4573-970a-826ab48cf3b1",
          "title": "Walkthrough Screens Validation",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should validate and navigate through walkthrough screens\"",
              "fullTitle": "Walkthrough Screens Validation \"before all\" hook for \"should validate and navigate through walkthrough screens\"",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log('Setting up driver...');\nthis.timeout(30000); // Allow 30 seconds for setup\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/WalkthroughScreen.test.mjs:10:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "725cdb49-3656-4c5b-9349-72b3fc70b674",
              "parentUUID": "94e9a478-debe-4573-970a-826ab48cf3b1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Walkthrough Screens Validation\"",
              "fullTitle": "Walkthrough Screens Validation \"after all\" hook in \"Walkthrough Screens Validation\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Closing driver session...');\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed.');\n} else {\n    console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "8a16e1d4-45f7-492b-8e8f-03ac078357fe",
              "parentUUID": "94e9a478-debe-4573-970a-826ab48cf3b1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should validate and navigate through walkthrough screens",
              "fullTitle": "Walkthrough Screens Validation should validate and navigate through walkthrough screens",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const cardXPaths = [\n    \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.view.View[1]\",\n    \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.view.View[2]\",\n    \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.view.View[2]\",\n];\nconsole.log('Launching the app...');\nawait driver.execute('mobile: activateApp', { appId: 'com.simpleenergy.app' });\nconst { width, height } = await driver.getWindowRect();\nawait driver.pause(4000);\nfor (let i = 0; i < cardXPaths.length; i++) {\n    const element = await driver.$(cardXPaths[i]);\n    const isDisplayed = await element.isDisplayed();\n\n    expect(isDisplayed, `Card ${i + 1} should be displayed`).to.be.true;\n\n    if (i < cardXPaths.length - 1) {\n        console.log(`Swiping to card ${i + 2}...`);\n        await driver.performActions([\n            {\n                type: \"pointer\",\n                id: \"finger1\",\n                parameters: { pointerType: \"touch\" },\n                actions: [\n                    { type: \"pointerMove\", duration: 0, x: width * 0.9, y: height / 2 },\n                    { type: \"pointerDown\", button: 0 },\n                    { type: \"pointerMove\", duration: 500, x: width * 0.1, y: height / 2 },\n                    { type: \"pointerUp\", button: 0 },\n                ],\n            },\n        ]);\n        await driver.pause(1000);\n    } else {\n        console.log('Completed all swipes. Exiting loop.');\n    }\n}\n\nconsole.log('Successfully validated walkthrough screens and navigation.');",
              "err": {},
              "uuid": "2dccefdf-2e92-4ab4-bfe7-f689283ec37d",
              "parentUUID": "94e9a478-debe-4573-970a-826ab48cf3b1",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "2dccefdf-2e92-4ab4-bfe7-f689283ec37d"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "681ee84b-df78-4371-a08d-bdd816941119",
          "title": "Login Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should log in successfully with OTP\"",
              "fullTitle": "Login Test \"before all\" hook for \"should log in successfully with OTP\"",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Setting up driver...\");\nthis.timeout(30000);\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/login.test.mjs:19:20)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "23556523-1c05-43a8-860a-c73ed8db6c6f",
              "parentUUID": "681ee84b-df78-4371-a08d-bdd816941119",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login Test\"",
              "fullTitle": "Login Test \"after all\" hook in \"Login Test\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Ending the login test session...');\nif (driver) {\n  await driver.deleteSession();\n  console.log('Driver session closed.');\n} else {\n  console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "22363e58-ac4c-4a5b-8acf-6f9b83a10eb4",
              "parentUUID": "681ee84b-df78-4371-a08d-bdd816941119",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should log in successfully with OTP",
              "fullTitle": "Login Test should log in successfully with OTP",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  console.log(\"Launching the app...\");\n  await driver.execute('mobile: activateApp', { appId: 'com.simpleenergy.app' });\n  console.log(\"App launched successfully.\");\n  await driver.pause(2000);\n  // Sign-in button\n  const signinButton = await driver.$('//android.widget.Button');\n  await signinButton.click();\n  await driver.pause(1000);\n  // Cancel popup\n  console.log('Waiting for popup to appear...');\n  const cancelButton = await driver.$('//android.widget.ImageView[@content-desc=\"Cancel\"]');\n  await cancelButton.click();\n  console.log('Popup canceled, proceeding to login screen...');\n  // Phone number input\n  const numberField = await driver.$('//android.widget.EditText');\n  await numberField.waitForDisplayed({ timeout: 5000 });\n  await numberField.click();\n  console.log('Focused on number field');\n  await driver.pause(1000); // Allow the field to be focused\n  const PHONE_NUMBER = '9480356496';\n  await numberField.setValue(PHONE_NUMBER);\n  console.log(`Entered phone number: ${PHONE_NUMBER}`);\n  // Submit button\n  const submitButton = await driver.$('//android.widget.Button');\n  await submitButton.click();\n  console.log('Submitted phone number and waiting for OTP...');\n  await driver.pause(3000);\n  // Enter OTP digits\n  for (let i = 0; i < OTP_DIGITS.length; i++) {\n    const otpField = await driver.$(OTP_FIELDS_XPATHS[i]);\n    await otpField.waitForDisplayed({ timeout: 7000 });\n    await otpField.setValue(OTP_DIGITS[i]);\n    console.log(`Entered OTP digit '${OTP_DIGITS[i]}' in field ${i + 1}`);\n  }\n  await driver.pause(3000);\n  // Allow permissions\n  const allowButton = await driver.$('//android.widget.Button[@resource-id=\"com.android.permissioncontroller:id/permission_allow_button\"]');\n  await allowButton.click();\n  await driver.pause(1000);\n  // Verify dashboard\n  console.log('Waiting for dashboard...');\n  const dashboardElement = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View');\n  await dashboardElement.waitForDisplayed({ timeout: 15000 });\n  console.log('Successfully redirected to the dashboard!');\n} catch (err) {\n  console.error('An error occurred during the login test:', err.message);\n}",
              "err": {},
              "uuid": "32a6bb24-a4f0-4b9b-8f82-4b494586c9d6",
              "parentUUID": "681ee84b-df78-4371-a08d-bdd816941119",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "32a6bb24-a4f0-4b9b-8f82-4b494586c9d6"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c40878ff-4785-402a-a4fb-280b870fc6d5",
          "title": "Profile Button Functionality",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should find and click the Profile button\"",
              "fullTitle": "Profile Button Functionality \"before all\" hook for \"should find and click the Profile button\"",
              "timedOut": false,
              "duration": 9,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver = await initializeDriver();",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/validateProfileButton.test.mjs:8:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "e5f236fb-1108-4289-8457-ac6f77d67991",
              "parentUUID": "c40878ff-4785-402a-a4fb-280b870fc6d5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Profile Button Functionality\"",
              "fullTitle": "Profile Button Functionality \"after all\" hook in \"Profile Button Functionality\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    await driver.deleteSession();\n    console.log(\"Driver session ended.\");\n}",
              "err": {},
              "uuid": "dee9f318-b405-42bc-af60-be9961ebc7b8",
              "parentUUID": "c40878ff-4785-402a-a4fb-280b870fc6d5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should find and click the Profile button",
              "fullTitle": "Profile Button Functionality should find and click the Profile button",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Waiting for the 'profile button' to appear...\");\n// Wait for the profile button to appear\nconst profileButtonSelector =\n    \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[3]/android.view.View[2]\";\nconst isProfileButtonPresent = await driver.waitUntil(\n    async () => {\n        const profileButton = await driver.$(profileButtonSelector);\n        return await profileButton.isExisting();\n    },\n    {\n        timeout: 15000,\n        timeoutMsg: \"'Profile button' not found within 15 seconds.\",\n    }\n);\n// Assert the button exists\nexpect(isProfileButtonPresent).to.be.true;\nconsole.log(\"'Profile button' found.\");\n// Click the Profile button\nconst profileButton = await driver.$(profileButtonSelector);\nawait profileButton.click();\nconsole.log(\"Profile button clicked, navigating to the next screen!\");",
              "err": {},
              "uuid": "990ad009-06cd-4587-8ad1-027e2f1e0cfe",
              "parentUUID": "c40878ff-4785-402a-a4fb-280b870fc6d5",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "990ad009-06cd-4587-8ad1-027e2f1e0cfe"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "250276b5-f062-4325-b6f6-65d53acbb643",
          "title": "Verify Field Length Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should validate the max length of the Name and Email fields\"",
              "fullTitle": "Verify Field Length Test \"before all\" hook for \"should validate the max length of the Name and Email fields\"",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log('Setting up driver...');\ndriver =await initializeDriver(); // Access the shared driver\nconsole.log('Driver setup complete, waiting for the app to load...');",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/emailLengthvalidate.test.mjs:9:23)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "9966a2e9-f288-4d14-a739-610454c335b3",
              "parentUUID": "250276b5-f062-4325-b6f6-65d53acbb643",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Verify Field Length Test\"",
              "fullTitle": "Verify Field Length Test \"after all\" hook in \"Verify Field Length Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"No cleanup needed as driver session is managed centrally.\");",
              "err": {},
              "uuid": "395cacda-51d7-4b83-89eb-71f1ce34ceae",
              "parentUUID": "250276b5-f062-4325-b6f6-65d53acbb643",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should validate the max length of the Name and Email fields",
              "fullTitle": "Verify Field Length Test should validate the max length of the Name and Email fields",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Navigating to the profile section...\");\nconst editProfileButton = await driver.$(\n    '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button'\n);\nawait editProfileButton.waitForDisplayed({ timeout: 5000 });\nawait editProfileButton.click();\nawait driver.pause(2000);\nconsole.log(\"Verifying Name field max length...\");\nconst nameField = await driver.$('android=new UiSelector().className(\"android.widget.EditText\")');\nawait nameField.setValue(\"ghdgfghdgfghdgfghdgfghdgfghd\"); // 31 characters\nconst nameValue = await nameField.getText();\nif (nameValue.length <= 31) {\n    console.log(\"Name field max length validation passed: \" + nameValue.length);\n} else {\n    console.error(\"Name field max length validation failed: \" + nameValue.length);\n}\nconsole.log(\"Verifying Email field max length...\");\nconst emailField = await driver.$('//android.widget.ScrollView/android.widget.EditText[2]');\nconst emailInput = \"gashgdjasgjjjjaexamplelongemailtextgggggg@gmail.com\"; // 51 characters before @\nawait emailField.setValue(emailInput);\nconst emailValue = await emailField.getText();\nif (emailValue.includes(\"@\") && emailValue.length <= 51 + emailInput.split(\"@\")[1].length + 1) {\n    console.log(\"Email field max length validation passed: \" + emailValue.length);\n} else {\n    console.error(\"Email field max length validation failed: \" + emailValue.length);\n}\nconsole.log(\"Saving changes...\");\nconst saveButton = await driver.$(\n    '//android.widget.ScrollView/android.view.View[4]/android.widget.Button'\n);\nawait saveButton.click();\nconsole.log(\"Changes saved successfully!\");\nconst homeButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[1]/android.view.View[2]');\nawait homeButton.click();\nconsole.log(\"Home button clicked\");",
              "err": {},
              "uuid": "6226e69a-3875-49ef-8d0b-18b68be9d2ce",
              "parentUUID": "250276b5-f062-4325-b6f6-65d53acbb643",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6226e69a-3875-49ef-8d0b-18b68be9d2ce"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f9cbe796-6064-4cf0-8732-4807c8c3dd28",
          "title": "Edit Details Empty Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should clear the Name and Email fields and attempt to save changes\"",
              "fullTitle": "Edit Details Empty Test \"before all\" hook for \"should clear the Name and Email fields and attempt to save changes\"",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log('Setting up driver...');\nthis.timeout(30000); // 30 seconds for setup\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/validatingEmptyFeilds.test.mjs:10:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "e986cbb8-07e1-4610-b578-8fe039fc13de",
              "parentUUID": "f9cbe796-6064-4cf0-8732-4807c8c3dd28",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Edit Details Empty Test\"",
              "fullTitle": "Edit Details Empty Test \"after all\" hook in \"Edit Details Empty Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Ending the edit details test session...\");\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed.');\n} else {\n    console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "1a4fa80b-2c02-4db4-8f5d-0f5d9b7fe0ef",
              "parentUUID": "f9cbe796-6064-4cf0-8732-4807c8c3dd28",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should clear the Name and Email fields and attempt to save changes",
              "fullTitle": "Edit Details Empty Test should clear the Name and Email fields and attempt to save changes",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Waiting for the 'Edit Details' button to appear...\");\nconst profileButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[3]/android.view.View[2]');\nawait profileButton.click();\nawait driver.waitUntil(\n    async () => {\n        const editButton = await driver.$(\n            \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n        );\n        return await editButton.isExisting();\n    },\n    {\n        timeout: 15000,\n        timeoutMsg: \"'Edit Details' button not found within 15 seconds.\",\n    }\n);\nconsole.log(\"'Edit Details' button found. Clicking the button...\");\nconst editButton = await driver.$(\n    \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n);\nawait editButton.click();\nconsole.log(\"Waiting for the next screen with Name and Email fields...\");\nawait driver.waitUntil(\n    async () => {\n        const nameField = await driver.$(\n            'android=new UiSelector().className(\"android.widget.EditText\")'\n        );\n        return await nameField.isDisplayed();\n    },\n    {\n        timeout: 20000,\n        timeoutMsg: \"Name field not found within 20 seconds.\",\n    }\n);\nconsole.log(\"Name field found. Clearing field...\");\nconst nameField = await driver.$(\n    'android=new UiSelector().className(\"android.widget.EditText\")'\n);\nawait nameField.setValue(\"\");\nconst emailField = await driver.$('//android.widget.ScrollView/android.widget.EditText[2]');\nawait emailField.click(); // Focus the field\nawait emailField.clearValue();\nconsole.log(\"Waiting for the 'Save Changes' button to appear...\");\nawait driver.waitUntil(\n    async () => {\n        const saveButton = await driver.$(\n            'android=new UiSelector().className(\"android.widget.Button\").instance(2)'\n        );\n        return await saveButton.isExisting();\n    },\n    {\n        timeout: 10000,\n        timeoutMsg: \"'Save Changes' button not found within 10 seconds.\",\n    }\n);\nconsole.log(\"'Save Changes' button found. Clicking the button...\");\nconst saveButton = await driver.$(\n    'android=new UiSelector().className(\"android.widget.Button\").instance(2)'\n);\nawait saveButton.click();\nconsole.log(\"Changes can't be saved because of empty fields!\");\nconst backButton = await driver.$('//android.widget.ScrollView/android.view.View[1]/android.widget.Button');\nawait backButton.click();\nconst backButton1 = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[1]/android.view.View[2]');\nawait backButton1.click();",
              "err": {},
              "uuid": "c71bece6-d4c5-453e-92df-a00ecf042d4b",
              "parentUUID": "f9cbe796-6064-4cf0-8732-4807c8c3dd28",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "c71bece6-d4c5-453e-92df-a00ecf042d4b"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "29cc5be7-fae2-4125-82da-6893e81eb3cc",
          "title": "Change DP Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should change the profile picture\"",
              "fullTitle": "Change DP Test \"before all\" hook for \"should change the profile picture\"",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log('Setting up driver...');\nthis.timeout(30000); // 30 seconds for setup\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\n\n// Push the profile picture to the correct Downloads folder on the emulator\nconsole.log('Pushing profile picture to emulator Downloads folder...');\ntry {\n    // Push the image to the emulator's internal storage Downloads folder\n    execSync('adb -s emulator-5554 push ./images.jpeg /storage/emulated/0/Download/');\n    console.log('Profile picture pushed successfully to the Downloads folder.');\n} catch (error) {\n    console.error('Error pushing profile picture:', error);\n    throw new Error('Failed to push profile picture to emulator Downloads folder');\n}\nawait driver.pause(2000);",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/changeProfile.test.mjs:12:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "698417b7-2c4f-427b-a5eb-b5531ab3b6a1",
              "parentUUID": "29cc5be7-fae2-4125-82da-6893e81eb3cc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Change DP Test\"",
              "fullTitle": "Change DP Test \"after all\" hook in \"Change DP Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Ending the Change DP test session...');\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed.');\n} else {\n    console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "ad8752aa-3d21-481b-939a-e48585551259",
              "parentUUID": "29cc5be7-fae2-4125-82da-6893e81eb3cc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should change the profile picture",
              "fullTitle": "Change DP Test should change the profile picture",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Clicking the Edit button...\");\nconst profileButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[3]/android.view.View[2]');\nawait profileButton.click();\nconst editButton = await driver.$(\n    \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n);\nawait editButton.click();\nconsole.log(\"Waiting for the Change DP button...\");\nawait driver.waitUntil(\n    async () => {\n        const changeDPButton = await driver.$(\n            '//android.widget.ScrollView/android.view.View[3]/android.widget.Button'\n        );\n        return await changeDPButton.isExisting();\n    },\n    {\n        timeout: 15000,\n        timeoutMsg: \"Change DP button not found within 15 seconds.\",\n    }\n);\nconsole.log(\"Clicking the Change DP button...\");\nconst changeDPButton = await driver.$(\n    '//android.widget.ScrollView/android.view.View[3]/android.widget.Button'\n);\nawait changeDPButton.click();\nconsole.log(\"Waiting for file picker to appear...\");\nconst filePicker = await driver.$(\"//android.widget.TextView\");\nawait filePicker.waitForExist({ timeout: 10000 });\nconsole.log(\"Selecting the Downloads folder...\");\nconst downloadsFolderXPath = '//android.widget.RelativeLayout';\nawait driver.$(downloadsFolderXPath).waitForExist({ timeout: 5000 });\nawait driver.$(downloadsFolderXPath).click();\nconsole.log(\"Looking for image files in the Downloads folder...\");\nconst imageFileXPath = '//android.widget.ImageView[contains(@content-desc, \".png\") or contains(@content-desc, \".jpeg\") or contains(@content-desc, \".jpg\")]';\nconst imageFiles = await driver.$$(`${imageFileXPath}`); // Select all matching image elements\n\nif (imageFiles.length > 0) {\n    console.log(\"Selecting the first available image...\");\n    await imageFiles[0].click();  // Click the first image found\n} else {\n    throw new Error('No image files found in the Downloads folder.');\n}\nconsole.log(\"Waiting for Save Changes button...\");\nconst saveChangesButton = await driver.$(\n    \"//android.widget.ScrollView/android.view.View[3]/android.widget.Button\"\n);\nawait saveChangesButton.waitForExist({ timeout: 5000 });\nconsole.log(\"Saving the changes...\");\nawait saveChangesButton.click();",
              "err": {},
              "uuid": "7db59067-bc44-46bd-a3d5-56cc1f97dcea",
              "parentUUID": "29cc5be7-fae2-4125-82da-6893e81eb3cc",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "7db59067-bc44-46bd-a3d5-56cc1f97dcea"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fb50e72c-1189-4836-a190-4bc84574fc40",
          "title": "Edit Details Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should edit details and save changes successfully\"",
              "fullTitle": "Edit Details Test \"before all\" hook for \"should edit details and save changes successfully\"",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(30000); \ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/editNameEmail.test.mjs:10:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "694f3df9-2594-4338-bb69-8508651b64be",
              "parentUUID": "fb50e72c-1189-4836-a190-4bc84574fc40",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Edit Details Test\"",
              "fullTitle": "Edit Details Test \"after all\" hook in \"Edit Details Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Ending the edit details test session...\");\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed.');\n} else {\n    console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "982e8ddc-2ed0-45fc-8f9e-1f9aa39bd7c5",
              "parentUUID": "fb50e72c-1189-4836-a190-4bc84574fc40",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should edit details and save changes successfully",
              "fullTitle": "Edit Details Test should edit details and save changes successfully",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Waiting for the 'Edit Details' button to appear...\");\nawait driver.waitUntil(\n    async () => {\n        const editButton = await driver.$(\n            \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n        );\n        return await editButton.isExisting();\n    },\n    {\n        timeout: 15000,\n        timeoutMsg: \"'Edit Details' button not found within 15 seconds.\",\n    }\n);\nconsole.log(\"'Edit Details' button found. Clicking the button...\");\nconst editButton = await driver.$(\n    \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n);\nawait editButton.click();\nconsole.log(\"Waiting for the next screen with Name and Email fields...\");\nawait driver.waitUntil(\n    async () => {\n        const nameField = await driver.$(\n            'android=new UiSelector().className(\"android.widget.EditText\")'\n        );\n        return await nameField.isDisplayed();\n    },\n    {\n        timeout: 20000,\n        timeoutMsg: \"Name field not found within 20 seconds.\",\n    }\n);\nconsole.log(\"Filling in the Name and Email fields...\");\nconst nameField = await driver.$(\n    'android=new UiSelector().className(\"android.widget.EditText\")'\n);\nawait nameField.setValue(\"testingg\");\nconst emailField = await driver.$('//android.widget.ScrollView/android.widget.EditText[2]');\nawait emailField.click();\nawait emailField.clearValue();\nawait emailField.click();\nawait emailField.setValue('testing@gmail.com');\nconsole.log(\"Waiting for the 'Save Changes' button to appear...\");\nawait driver.waitUntil(\n    async () => {\n        const saveButton = await driver.$(\n            'android=new UiSelector().className(\"android.widget.Button\").instance(2)'\n        );\n        return await saveButton.isExisting();\n    },\n    {\n        timeout: 10000,\n        timeoutMsg: \"'Save Changes' button not found within 10 seconds.\",\n    }\n);\nconsole.log(\"'Save Changes' button found. Clicking the button...\");\nconst saveButton = await driver.$(\n    'android=new UiSelector().className(\"android.widget.Button\").instance(2)'\n);\nawait saveButton.click();\nconsole.log(\"Changes saved successfully!\");\n// const backButton = await driver.$('//android.widget.ScrollView/android.view.View[1]/android.widget.Button');\n// await backButton.click();\n// console.log(\"back button clicked\");",
              "err": {},
              "uuid": "80059c13-4e36-4329-a01e-9ae826bce901",
              "parentUUID": "fb50e72c-1189-4836-a190-4bc84574fc40",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "80059c13-4e36-4329-a01e-9ae826bce901"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ed4b733c-2a28-429c-8ee6-ebff65c98541",
          "title": "Email Validation Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should validate email addresses and set valid ones\"",
              "fullTitle": "Email Validation Test \"before all\" hook for \"should validate email addresses and set valid ones\"",
              "timedOut": false,
              "duration": 6,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(60000); // Increase timeout for the entire setup\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(3000); // Increased wait time for the app to load",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/testSampleEmails.test.mjs:17:20)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "07eb4865-1822-456a-bc3b-1c03c0bf9e42",
              "parentUUID": "ed4b733c-2a28-429c-8ee6-ebff65c98541",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Email Validation Test\"",
              "fullTitle": "Email Validation Test \"after all\" hook in \"Email Validation Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Ending the Change DP test session...');\nif (driver) {\n  await driver.deleteSession();\n  console.log('Driver session closed.');\n} else {\n  console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "611e8479-be5c-47c2-992b-5c152488636d",
              "parentUUID": "ed4b733c-2a28-429c-8ee6-ebff65c98541",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should validate email addresses and set valid ones",
              "fullTitle": "Email Validation Test should validate email addresses and set valid ones",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Navigating to the profile section...');\nconst profileButton = await driver.$(\n  \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[3]/android.view.View[2]\"\n);\nawait profileButton.waitForDisplayed({ timeout: 30000 }); // Increased timeout for element display\nawait driver.pause(1000);\nawait profileButton.click();\nconsole.log('Navigating to the \"Edit Details\" button...');\nconst editButton = await driver.$(\n  \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n);\nawait editButton.click();\nconst emailField = await driver.$('//android.widget.ScrollView/android.widget.EditText[2]');\nawait emailField.waitForDisplayed({ timeout: 10000 }); // Increased timeout for element display\nfor (const domain of emailDomains) {\n  const email = `testing@${domain}`;\n  const isValidEmail = emailRegex.test(email);\n  console.log(`Validation for email ${email}: ${isValidEmail ? 'Valid' : 'Invalid'}`);\n  if (isValidEmail) {\n    await emailField.clearValue();\n    await emailField.setValue(email);\n    console.log(`Email ${email} set in the field.`);\n  }\n  await driver.pause(300); // Reduced pause time between emails\n}\nconst backButton = await driver.$('//android.widget.ScrollView/android.view.View[1]/android.widget.Button');\nawait backButton.click();",
              "err": {},
              "uuid": "b07c49cc-e434-421f-9169-a3ae1802a9c2",
              "parentUUID": "ed4b733c-2a28-429c-8ee6-ebff65c98541",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b07c49cc-e434-421f-9169-a3ae1802a9c2"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2748ffd4-5b39-4727-a7f4-556161e08a3a",
          "title": "Switching between vehicles models",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should change the default vehicle\"",
              "fullTitle": "Switching between vehicles models \"before all\" hook for \"should change the default vehicle\"",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Setting up the driver...\");\nthis.timeout(30000); // Allowing enough time for driver setup\ndriver = await initializeDriver();\nconsole.log(\"Driver setup complete.\");",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/choseDefaultVehicle.test.mjs:10:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "280b2ab7-ceaa-41f5-b0ca-edeb19a56992",
              "parentUUID": "2748ffd4-5b39-4727-a7f4-556161e08a3a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Switching between vehicles models\"",
              "fullTitle": "Switching between vehicles models \"after all\" hook in \"Switching between vehicles models\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Ending the test session...\");\nif (driver) {\n    await driver.deleteSession();\n    console.log(\"Driver session ended.\");\n}",
              "err": {},
              "uuid": "f9702253-f4f4-4428-a3c6-d3b222f27dca",
              "parentUUID": "2748ffd4-5b39-4727-a7f4-556161e08a3a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should change the default vehicle",
              "fullTitle": "Switching between vehicles models should change the default vehicle",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(30000); // Allowing enough time for the test steps\n// Step 1: Click on the home button\nconst homeButton = driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[1]/android.view.View[2]');\nawait homeButton.click()\nconsole.log(\"home button clicked.\");\nawait driver.pause(2000);\nconst chooseButton = await driver.$(\n    '//android.widget.ScrollView/android.view.View[2]/android.view.View/android.view.View[2]/android.widget.Button'\n);\nawait chooseButton.click();\nconsole.log(\"choose button clicked.\");\nawait driver.pause(3000);\n// Step 3: Click on the vehicleCardButton button for the Home address\nconst vehicleCardButton = await driver.$(\n    '(//android.widget.ImageView[@content-desc=\"Vehicle Color\"])[1]'\n);\nawait vehicleCardButton.click();\nconsole.log(\"Edit Home button clicked.\");\nawait driver.pause(2000);\n// Step 6: Click the Back button\nconst setDefaultButton = await driver.$(\n    '//android.widget.Button'\n);\nawait setDefaultButton.click();\nconsole.log(\"Back button clicked.\");\nconst confirmButton= await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_yes_btn\"]');\nawait confirmButton.click();\nconst backButton = driver.$('//android.widget.Button');\nawait backButton.click();",
              "err": {},
              "uuid": "041dacd0-dfb1-4ca7-984c-24186c2feda7",
              "parentUUID": "2748ffd4-5b39-4727-a7f4-556161e08a3a",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "041dacd0-dfb1-4ca7-984c-24186c2feda7"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f5672c43-58eb-4ecc-a5f1-6c1f4dbe415a",
          "title": "Validate Ride Statistics and Date Logic",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should validate vertical scrolling and date logic\"",
              "fullTitle": "Validate Ride Statistics and Date Logic \"before all\" hook for \"should validate vertical scrolling and date logic\"",
              "timedOut": false,
              "duration": 8,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Setting up driver...\");\nthis.timeout(60000);\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/validateDateAndStats.test.mjs:10:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "5b7a1933-29e1-4b79-9b3a-a129558d13ed",
              "parentUUID": "f5672c43-58eb-4ecc-a5f1-6c1f4dbe415a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Validate Ride Statistics and Date Logic\"",
              "fullTitle": "Validate Ride Statistics and Date Logic \"after all\" hook in \"Validate Ride Statistics and Date Logic\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Closing driver session');\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed');\n} else {\n    console.log('Driver session not created. Skipping session cleanup');\n}",
              "err": {},
              "uuid": "05000111-24f3-4350-a38d-1bd5b72f5b79",
              "parentUUID": "f5672c43-58eb-4ecc-a5f1-6c1f4dbe415a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should validate vertical scrolling and date logic",
              "fullTitle": "Validate Ride Statistics and Date Logic should validate vertical scrolling and date logic",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Launching the app...\");\nconst homeButton = driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[1]/android.view.View[2]');\nawait homeButton.click()\nawait driver.pause(1000)\nawait driver.executeScript(\"mobile: activateApp\", [{ appId: \"com.simpleenergy.app\" }]);\nconsole.log(\"Validating and navigating vertically...\");\nconst { width, height } = await driver.getWindowRect();\n// Scroll up vertically\nawait driver.performActions([\n    {\n        type: \"pointer\",\n        id: \"finger1\",\n        parameters: { pointerType: \"touch\" },\n        actions: [\n            { type: \"pointerMove\", duration: 0, x: width / 2, y: height * 0.8 },\n            { type: \"pointerDown\", button: 0 },\n            { type: \"pointerMove\", duration: 500, x: width / 2, y: height * 0.1 },\n            { type: \"pointerUp\", button: 0 },\n        ],\n    },\n]);\nawait driver.pause(2000);\nconsole.log(\"Vertical scrolling completed.\");\nconst targetElement = await driver.$('//android.view.View[@content-desc=\"Ride Statistic\"]');\nexpect(await targetElement.isDisplayed()).to.be.true;\nconsole.log(\"Target element is visible after vertical scroll.\");\nawait targetElement.click();\nconsole.log(\"Target element clicked.\");\nawait driver.pause(2000);\nconst currentDate = new Date();\nconst formattedDate = `${currentDate.getDate()} ${currentDate.toLocaleString('en-US', {\n    month: 'short',\n})}`;\nconst dateElements = await driver.$$('//android.widget.TextView');\nlet isDateMatched = false;\nfor (const element of dateElements) {\n    const text = await element.getText();\n    if (text === formattedDate) {\n        isDateMatched = true;\n        console.log(`Today's date matched: ${formattedDate}`);\n        break;\n    }\n}\nif (!isDateMatched) {\n    console.log(`Today's date (${formattedDate}) was not found on the screen.`);\n}\nawait driver.performActions([\n    {\n        type: \"pointer\",\n        id: \"finger2\", // for scroll down\n        parameters: { pointerType: \"touch\" },\n        actions: [\n            // Start near the top of the screen\n            { type: \"pointerMove\", duration: 0, x: width / 2, y: height * 0.8 },\n            { type: \"pointerDown\", button: 0 },\n            // Move downwards\n            { type: \"pointerMove\", duration: 500, x: width / 2, y: height * 0.2 },\n            { type: \"pointerUp\", button: 0 }, \n        ],\n        \n    },\n    \n]);\n// await driver.pause(10000); // Allow time to observe the scroll\n// await driver.releaseActions(); // Release the pointer actions\n// await driver.pause(1000); // Add a pause to ensure smooth execution\nconst lastContainer = await driver.$('//android.widget.ScrollView/android.view.View[3]');\nexpect(await lastContainer.isDisplayed()).to.be.true;\nconsole.log(\"Distance covered section is visible after vertical scroll.\");\nawait driver.performActions([\n    {\n        type: \"pointer\",\n        id: \"finger1\",\n        parameters: { pointerType: \"touch\" },\n        actions: [\n            { type: \"pointerMove\", duration: 0, x: width / 2, y: height * 0.2 },\n            { type: \"pointerDown\", button: 0 },\n            { type: \"pointerMove\", duration: 500, x: width / 2, y: height * 0.8 },\n            { type: \"pointerUp\", button: 0 },\n        ],\n    },\n]);\nawait driver.releaseActions();\nawait driver.pause(1000);\nconsole.log(\"Scroll down gesture performed.\");\nconst backButton = await driver.$('//android.widget.ScrollView/android.view.View[1]/android.view.View/android.widget.Button');\nawait backButton.click();\nawait driver.performActions([\n    {\n        type: \"pointer\",\n        id: \"finger1\",\n        parameters: { pointerType: \"touch\" },\n        actions: [\n            { type: \"pointerMove\", duration: 0, x: width / 2, y: height * 0.1 },\n            { type: \"pointerDown\", button: 0 },\n            { type: \"pointerMove\", duration: 500, x: width / 2, y: height * 0.8 },\n            { type: \"pointerUp\", button: 0 },\n        ],\n    },\n]);\nawait driver.releaseActions();",
              "err": {},
              "uuid": "265fa11c-1188-4b39-a213-0c12d45fe66a",
              "parentUUID": "f5672c43-58eb-4ecc-a5f1-6c1f4dbe415a",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "265fa11c-1188-4b39-a213-0c12d45fe66a"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "101c0166-aad0-48a4-922a-1a1e4ddf870d",
          "title": "Edit and Update Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should click Edit, focus on input, write testing and click Update\"",
              "fullTitle": "Edit and Update Test \"before all\" hook for \"should click Edit, focus on input, write testing and click Update\"",
              "timedOut": false,
              "duration": 6,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Setting up driver...\");\nthis.timeout(30000);\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);  // Adjust pause time if necessary",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/renameModel.test.mjs:10:20)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "c6375153-eebb-40dc-a4d0-41e092f894b3",
              "parentUUID": "101c0166-aad0-48a4-922a-1a1e4ddf870d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Edit and Update Test\"",
              "fullTitle": "Edit and Update Test \"after all\" hook in \"Edit and Update Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Ending the test session...\");\nif (driver) {\n  await driver.deleteSession();\n  console.log('Driver session closed.');\n} else {\n  console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "86cd1d59-6deb-4ff7-a4d1-4bd355d50e7f",
              "parentUUID": "101c0166-aad0-48a4-922a-1a1e4ddf870d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should click Edit, focus on input, write testing and click Update",
              "fullTitle": "Edit and Update Test should click Edit, focus on input, write testing and click Update",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  // console.log(\"Launching the app...\");\n  // await driver.executeScript(\"mobile: activateApp\", [{ appId: \"com.simpleenergy.app\" }]);\n  console.log(\"Clicking on Edit button...\");\n  const editButton = await driver.$('//android.widget.ScrollView/android.view.View[2]/android.view.View/android.view.View[4]/android.view.View');\n  await editButton.waitForDisplayed({ timeout: 5000 });\n  await editButton.click();\n  console.log(\"Clicked on Edit button.\");\n  console.log(\"Focusing on the input field...\");\n  const inputField = await driver.$('//android.widget.EditText');\n  await inputField.waitForDisplayed({ timeout: 5000 });\n  await inputField.click();\n  await inputField.setValue('testing');\n  console.log(\"Entered text 'testing' in the input field.\");\n  console.log(\"Clicking on Update button...\");\n  const updateButton = await driver.$('//android.widget.ScrollView/android.view.View/android.widget.Button');\n  await updateButton.waitForDisplayed({ timeout: 5000 });\n  await updateButton.click();\n  console.log(\"Clicked on Update button.\");\n  \n  await driver.pause(2000); // Allow time for the update action to complete\n} catch (err) {\n  console.error(\"An error occurred during the Edit and Update test:\", err.message);\n}",
              "err": {},
              "uuid": "3080a799-ed99-4a91-b701-5d0699a614da",
              "parentUUID": "101c0166-aad0-48a4-922a-1a1e4ddf870d",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "3080a799-ed99-4a91-b701-5d0699a614da"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "98a5c2ab-8baf-4d14-ace4-df08def4b33c",
          "title": "Manage Address Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should update the Home address\"",
              "fullTitle": "Manage Address Test \"before all\" hook for \"should update the Home address\"",
              "timedOut": false,
              "duration": 9,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Setting up the driver...\");\nthis.timeout(30000); // Allowing enough time for driver setup\ndriver = await initializeDriver();\nconsole.log(\"Driver setup complete.\");",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/editAddress.test.mjs:10:24)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "10c6cdbf-6ae0-4090-9d89-c026adbc8154",
              "parentUUID": "98a5c2ab-8baf-4d14-ace4-df08def4b33c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Manage Address Test\"",
              "fullTitle": "Manage Address Test \"after all\" hook in \"Manage Address Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Ending the test session...\");\nif (driver) {\n    await driver.deleteSession();\n    console.log(\"Driver session ended.\");\n}",
              "err": {},
              "uuid": "1ec9cb76-b9ed-4ffb-8095-0521a7148485",
              "parentUUID": "98a5c2ab-8baf-4d14-ace4-df08def4b33c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should update the Home address",
              "fullTitle": "Manage Address Test should update the Home address",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(30000); // Allowing enough time for the test steps\n// Step 1: Click on the Profile button\nconst profileButton = await driver.$(\n    '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[3]/android.view.View[2]'\n);\nawait profileButton.click();\nconsole.log(\"Profile button clicked.\");\nawait driver.pause(2000);\n// Step 2: Click on the Address button\nconst addressButton = await driver.$(\n    '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.widget.ScrollView/android.view.View/android.view.View[1]/android.widget.Button'\n);\nawait addressButton.click();\nconsole.log(\"Address button clicked.\");\nawait driver.pause(2000);\n// Step 3: Click on the Edit button for the Home address\nconst editHomeButton = await driver.$(\n    '//android.widget.ScrollView/android.view.View[1]/android.view.View[3]/android.widget.Button'\n);\nawait editHomeButton.click();\nconsole.log(\"Edit Home button clicked.\");\nawait driver.pause(2000);\n// Step 4: Set the fixed address into the EditText field for Home address\nconst fixedAddress = \"252, Sucasa Golden Park, 4th Main Road, Rams Lake View Meadows, Vinayak Nagar, Kattigenahalli, Bengaluru, Karnataka. 33 m from OYO Hotel, Pin-560063 (India)\";\nconst homeAddressEditText = await driver.$('//android.widget.EditText');\nawait homeAddressEditText.setValue(fixedAddress); // Setting the fixed address\nconsole.log(\"Home address updated with the fixed address:\", fixedAddress);\n// Step 5: Check if the Confirm button is enabled\nconst confirmButton = await driver.$(\n    '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.widget.Button'\n);\nconst isEnabled = await confirmButton.isEnabled();\nconsole.log(\"Checking if Confirm button is enabled...\");\nexpect(isEnabled).to.be.true; // Assert that the Confirm button is enabled\nconsole.log(\"Confirm button is enabled. Clicking it.\");\nawait confirmButton.click();\nawait driver.pause(2000); // Wait for 2 seconds after clicking\nconsole.log(\"Address update confirmed!\");\n// Step 6: Click the Back button\nconst backButton = await driver.$(\n    '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.widget.Button'\n);\nawait backButton.click();\nconsole.log(\"Back button clicked.\");\nconst backButton1 = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.widget.Button');\nawait backButton1.click();",
              "err": {},
              "uuid": "2c3f743d-69e5-4c71-9263-040f8a237ff9",
              "parentUUID": "98a5c2ab-8baf-4d14-ace4-df08def4b33c",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "2c3f743d-69e5-4c71-9263-040f8a237ff9"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d2b243bf-84d3-4930-a27e-5a47deb0ca6c",
          "title": "Logout Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should perform the logout operation\"",
              "fullTitle": "Logout Test \"before all\" hook for \"should perform the logout operation\"",
              "timedOut": false,
              "duration": 6,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(30000); // 30 seconds for setup\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/clearAddress.test.mjs:10:20)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "f5d20b7d-3d95-4ac4-bb66-ebbee564142c",
              "parentUUID": "d2b243bf-84d3-4930-a27e-5a47deb0ca6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Logout Test\"",
              "fullTitle": "Logout Test \"after all\" hook in \"Logout Test\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Ending the logout test session...');\nif (driver) {\n  await driver.deleteSession();\n  console.log('Driver session closed.');\n} else {\n  console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "ee6c35e5-21ec-42f8-b328-a35e4d9abed1",
              "parentUUID": "d2b243bf-84d3-4930-a27e-5a47deb0ca6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should perform the logout operation",
              "fullTitle": "Logout Test should perform the logout operation",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Navigating to the profile section...');\n// const profileButton = await driver.$(\n//   '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[1]/android.view.View[2]'\n// );\n// await profileButton.click();\n// await driver.pause(2000);\nconsole.log('Navigating to the addresses section...');\nconst addressesButton = await driver.$(\n  '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.widget.ScrollView/android.view.View/android.view.View[1]/android.widget.Button'\n);\nawait addressesButton.click();\nawait driver.pause(2000);\nconsole.log('Attempting to clear address...');\nconst clearButton = await driver.$(\n  '//android.widget.ScrollView/android.view.View[1]/android.view.View[1]/android.widget.Button'\n);\nawait clearButton.click();\nawait driver.pause(1000);\nconsole.log('Cancelling address clearing...');\nconst noButton = await driver.$(\n  '//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_no_btn\"]'\n);\nawait noButton.click();\nconst backButton = await driver.$(\n  '//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.widget.Button'\n  );\n  await backButton.click();\n  console.log(\"Back button clicked.\");\n  const Homebutton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[1]/android.view.View[2]');\n  await Homebutton.click();",
              "err": {},
              "uuid": "71f1cd93-10a0-43f8-a3d4-52cf076b7f76",
              "parentUUID": "d2b243bf-84d3-4930-a27e-5a47deb0ca6c",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "71f1cd93-10a0-43f8-a3d4-52cf076b7f76"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "02748938-23cd-4102-b0c7-55942c0aa09f",
          "title": "Orientation Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should verify orientation and switch between portrait and landscape\"",
              "fullTitle": "Orientation Test \"before all\" hook for \"should verify orientation and switch between portrait and landscape\"",
              "timedOut": false,
              "duration": 7,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(30000); \ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/screenOrientation.test.mjs:12:20)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "b687f068-da01-4164-9c94-875d0fd6fc12",
              "parentUUID": "02748938-23cd-4102-b0c7-55942c0aa09f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook for \"should verify orientation and switch between portrait and landscape\"",
              "fullTitle": "Orientation Test \"after all\" hook for \"should verify orientation and switch between portrait and landscape\"",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log('Ending the orientation test session...');\n// Ensure the orientation is set back to portrait before ending the session\nconst currentOrientation = await driver.getOrientation();\nif (currentOrientation !== 'PORTRAIT') {\n  console.log('Resetting orientation to portrait...');\n  await driver.setOrientation('PORTRAIT');\n}\nif (driver) {\n  await driver.deleteSession();\n  console.log('Driver session closed.');\n} else {\n  console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'getOrientation')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'getOrientation')\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/screenOrientation.test.mjs:60:45)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "7c2bd1d0-4aca-4896-b05d-66a0bc61f4bc",
              "parentUUID": "02748938-23cd-4102-b0c7-55942c0aa09f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should verify orientation and switch between portrait and landscape",
              "fullTitle": "Orientation Test should verify orientation and switch between portrait and landscape",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Launching the app...');\nlet currentOrientation = await driver.getOrientation();\nconsole.log(`Initial Orientation: ${currentOrientation}`);\n// Ensure initial orientation is portrait\nif (currentOrientation !== 'PORTRAIT') {\n  console.log('Switching to portrait mode...');\n  await driver.setOrientation('PORTRAIT');\n}\nconsole.log('Enabling auto-rotate feature...');\ntry {\n  await driver.execute('mobile: shell', {\n    command: 'settings put system accelerometer_rotation 1',\n  });\n} catch (err) {\n  console.warn('Could not enable auto-rotate programmatically.');\n}\nconsole.log('Attempting to switch to landscape mode...');\nawait delay(1000); // Adding delay before orientation change\nawait driver.setOrientation('LANDSCAPE');\ncurrentOrientation = await driver.getOrientation();\nconsole.log(`Orientation after switching to landscape: ${currentOrientation}`);\nexpect(currentOrientation).to.equal('LANDSCAPE', 'Failed to switch to landscape mode.');\nconsole.log('Switching back to portrait mode...');\nawait driver.setOrientation('PORTRAIT');\ncurrentOrientation = await driver.getOrientation();\nconsole.log(`Orientation after switching back to portrait: ${currentOrientation}`);\nexpect(currentOrientation).to.equal('PORTRAIT', 'Failed to switch back to portrait mode.');",
              "err": {},
              "uuid": "c9077ba9-41a8-4a5e-9428-d76ae36c88cb",
              "parentUUID": "02748938-23cd-4102-b0c7-55942c0aa09f",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "c9077ba9-41a8-4a5e-9428-d76ae36c88cb"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f33be0c0-b678-47d6-9e7e-f73d3e1992fd",
          "title": "Document Upload Flow",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should complete the document upload process\"",
              "fullTitle": "Document Upload Flow \"before all\" hook for \"should complete the document upload process\"",
              "timedOut": false,
              "duration": 6,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Setting up driver...\");\nthis.timeout(30000);\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);  // Adjust pause time if necessary",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/DLuploading.test.mjs:12:28)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "cfa0512f-694d-4cb5-a0e8-1c58259ad339",
              "parentUUID": "f33be0c0-b678-47d6-9e7e-f73d3e1992fd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Document Upload Flow\"",
              "fullTitle": "Document Upload Flow \"after all\" hook in \"Document Upload Flow\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Closing driver session');\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed');\n} else {\n    console.log('Driver session not created. Skipping session cleanup');\n}",
              "err": {},
              "uuid": "0dfd0436-5b20-45a5-af92-9e9ee95bd81f",
              "parentUUID": "f33be0c0-b678-47d6-9e7e-f73d3e1992fd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should complete the document upload process",
              "fullTitle": "Document Upload Flow should complete the document upload process",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Step 1: Clicking on the initial button.\");\nconst initialButton = await driver.$('//android.widget.ScrollView/android.view.View[2]/android.view.View/android.view.View[1]/android.widget.Button');\nawait initialButton.click();\nawait driver.pause(1000);\nconsole.log(\"Step 2: Clicking on the Document button.\");\nconst documentButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View/android.widget.Button');\nawait documentButton.click();\nconsole.log(\"Step 3: Clicking on the Add Document button.\");\nconst addDocumentButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.widget.Button');\nawait addDocumentButton.click();\nconsole.log(\"Step 4: Clicking on Driver Licence option.\");\nconst driverLicenceOption = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/dl_btn\"]');\nawait driverLicenceOption.click();\nconsole.log(\"Step 5: Checking if the Upload button is enabled.\");\nconst uploadButton = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_upload_btn\"]');\nconst isUploadEnabled = await uploadButton.isEnabled();\nconsole.log(`Upload button enabled: ${isUploadEnabled}`);\nif (isUploadEnabled) {\n    console.log(\"Step 6: Clicking on the enabled Upload button.\");\n    await uploadButton.click();\n    console.log(\"Step 7: Navigating to the SD card and selecting the first PDF.\");\n    const file = await driver.$('(//android.widget.LinearLayout[@resource-id=\"com.google.android.documentsui:id/nameplate\"])[1]/android.widget.RelativeLayout');\n    await file.waitForDisplayed({ timeout: 5000 });\n    console.log(\"PDF file found.\");\n    await file.click();\n    await driver.pause(3000);\n    console.log(\"Step 8: Focusing on the File Name field and entering 'Driving Licence'.\");\n    const fileNameField = await driver.$('//android.widget.EditText[@resource-id=\"com.simpleenergy.app:id/document_title2_edittext\"]');\n    await fileNameField.setValue(\"Driving Licence\");\n    console.log(\"Step 9: Checking if the Submit button is enabled.\");\n    const submitButton = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_save_btn\"]');\n    const isSubmitEnabled = await submitButton.isEnabled();\n    console.log(`Submit button enabled: ${isSubmitEnabled}`);\n    if (isSubmitEnabled) {\n        console.log(\"Step 10: Clicking the Submit button.\");\n        await submitButton.click();\n        await driver.pause(6000);\n        console.log(\"Document successfully submitted.\");\n        console.log(\"Step 11: Confirming the file is added.\");\n        const addedFile = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View[1]');\n        const isFileAdded = await addedFile.isDisplayed();\n        console.log(`File added: ${isFileAdded}`);\n        console.log(\"Step 12: Clicking the Delete button.\");\n        const deleteButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View[1]/android.view.View/android.widget.Button');\n        await deleteButton.click();\n        console.log(\"Step 13: Confirming deletion.\");\n        const confirmDelete = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_yes_btn\"]');\n        await confirmDelete.click();\n        await driver.pause(5000);\n        console.log(\"Step 14: Clicking the Back button.\");\n        const backButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.widget.Button');\n        await backButton.click();\n        console.log(\"Process completed.\");\n    } else {\n        console.log(\"Submit button is not enabled. Exiting process.\");\n    }\n} else {\n    console.log(\"Upload button is not enabled. Exiting process.\");\n}",
              "err": {},
              "uuid": "9c1843b2-80fa-4d28-a51f-1e5f27644be6",
              "parentUUID": "f33be0c0-b678-47d6-9e7e-f73d3e1992fd",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "9c1843b2-80fa-4d28-a51f-1e5f27644be6"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "64b00365-fd78-4769-b879-21fa29fc4ea0",
          "title": "Document Upload Flow",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should complete the document upload process\"",
              "fullTitle": "Document Upload Flow \"before all\" hook for \"should complete the document upload process\"",
              "timedOut": false,
              "duration": 5,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Setting up driver...\");\nthis.timeout(30000);\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);  // Adjust pause time if necessary",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/RCuploading.test.mjs:11:28)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "21fcaad0-0bf4-4c7f-bf8b-a40b848edae1",
              "parentUUID": "64b00365-fd78-4769-b879-21fa29fc4ea0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Document Upload Flow\"",
              "fullTitle": "Document Upload Flow \"after all\" hook in \"Document Upload Flow\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Closing driver session');\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed');\n} else {\n    console.log('Driver session not created. Skipping session cleanup');\n}",
              "err": {},
              "uuid": "6cdf0f94-db6b-4728-b64d-4cc6f15f71a0",
              "parentUUID": "64b00365-fd78-4769-b879-21fa29fc4ea0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should complete the document upload process",
              "fullTitle": "Document Upload Flow should complete the document upload process",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Step 1: Clicking on the initial button.\");\n// const initialButton = await driver.$('//android.widget.ScrollView/android.view.View[2]/android.view.View/android.view.View[1]/android.widget.Button');\n// await initialButton.click();\n// await driver.pause(1000);\nconsole.log(\"Step 2: Clicking on the Document button.\");\nconst documentButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View/android.widget.Button');\nawait documentButton.click();\nconsole.log(\"Step 3: Clicking on the Add Document button.\");\nconst addDocumentButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.widget.Button');\n\nawait addDocumentButton.click();\nconsole.log(\"Step 4: Clicking on Driver Licence option.\");\nconst RegistrationCardOption = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/rc_btn\"]');\nawait RegistrationCardOption.click();\nconsole.log(\"Step 5: Checking if the Upload button is enabled.\");\nconst uploadButton = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_upload_btn\"]');\nconst isUploadEnabled = await uploadButton.isEnabled();\nconsole.log(`Upload button enabled: ${isUploadEnabled}`);\nif (isUploadEnabled) {\n    console.log(\"Step 6: Clicking on the enabled Upload button.\");\n    await uploadButton.click();\n    console.log(\"Step 7: Navigating to the SD card and selecting the first PDF.\");\n    const file = await driver.$('(//android.widget.LinearLayout[@resource-id=\"com.google.android.documentsui:id/nameplate\"])[2]/android.widget.RelativeLayout');\n    await file.waitForDisplayed({ timeout: 5000 });\n    console.log(\"PDF file found.\");\n    await file.click();\n    await driver.pause(3000);\n    console.log(\"Step 8: Focusing on the File Name field and entering 'Registration Card'.\");\n    const fileNameField = await driver.$('//android.widget.EditText[@resource-id=\"com.simpleenergy.app:id/document_title2_edittext\"]');\n    await fileNameField.setValue(\"Registration\");\n    console.log(\"Step 9: Checking if the Submit button is enabled.\");\n    const submitButton = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_save_btn\"]');\n    const isSubmitEnabled = await submitButton.isEnabled();\n    console.log(`Submit button enabled: ${isSubmitEnabled}`);\n    if (isSubmitEnabled) {\n        console.log(\"Step 10: Clicking the Submit button.\");\n        await submitButton.click();\n        await driver.pause(6000);\n        console.log(\"Document successfully submitted.\");\n        console.log(\"Step 11: Confirming the file is added.\");\n        const addedFile = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View[1]');\n        const isFileAdded = await addedFile.isDisplayed();\n        console.log(`File added: ${isFileAdded}`);\n        console.log(\"Step 12: Clicking the Delete button.\");\n        const deleteButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View[1]/android.view.View/android.widget.Button');\n        await deleteButton.click();\n        console.log(\"Step 13: Confirming deletion.\");\n        const confirmDelete = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_yes_btn\"]');\n        await confirmDelete.click();\n        await driver.pause(5000);\n        console.log(\"Step 14: Clicking the Back button.\");\n        const backButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.widget.Button');\n        await backButton.click();\n        console.log(\"Process completed.\");\n    } else {\n        console.log(\"Submit button is not enabled. Exiting process.\");\n    }\n} else {\n    console.log(\"Upload button is not enabled. Exiting process.\");\n}",
              "err": {},
              "uuid": "873f78db-a581-4621-b851-21873d529caf",
              "parentUUID": "64b00365-fd78-4769-b879-21fa29fc4ea0",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "873f78db-a581-4621-b851-21873d529caf"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1581cd16-e1b4-45c8-a5a9-53ef6728ba70",
          "title": "Document Upload Flow",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should complete the document upload process\"",
              "fullTitle": "Document Upload Flow \"before all\" hook for \"should complete the document upload process\"",
              "timedOut": false,
              "duration": 12,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log(\"Setting up driver...\");\nthis.timeout(30000);\ndriver = await initializeDriver();\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);  // Adjust pause time if necessary",
              "err": {
                "message": "Error: No connected devices found.",
                "estack": "Error: No connected devices found.\n    at getDeviceName (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:14:11)\n    at initializeDriver (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/driverSetup.mjs:37:22)\n    at Context.<anonymous> (file:///home/niketdeshmukh/Desktop/TEST/tests/cases/ICuploading.test.mjs:11:28)\n    at process.processImmediate (node:internal/timers:491:21)",
                "diff": null
              },
              "uuid": "4d2bf067-7b8f-44f7-88e2-8fddc24b151d",
              "parentUUID": "1581cd16-e1b4-45c8-a5a9-53ef6728ba70",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Document Upload Flow\"",
              "fullTitle": "Document Upload Flow \"after all\" hook in \"Document Upload Flow\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Closing driver session');\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed');\n} else {\n    console.log('Driver session not created. Skipping session cleanup');\n}",
              "err": {},
              "uuid": "fc4e8f52-4a1b-43f2-98a1-bd54ff37a57a",
              "parentUUID": "1581cd16-e1b4-45c8-a5a9-53ef6728ba70",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should complete the document upload process",
              "fullTitle": "Document Upload Flow should complete the document upload process",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Step 1: Clicking on the initial button.\");\n// const initialButton = await driver.$('//android.widget.ScrollView/android.view.View[2]/android.view.View/android.view.View[1]/android.widget.Button');\n// await initialButton.click();\nawait driver.pause(1000);\nconsole.log(\"Step 2: Clicking on the Document button.\");\nconst documentButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View/android.widget.Button');\nawait documentButton.click();\nconsole.log(\"Step 3: Clicking on the Add Document button.\");\nconst addDocumentButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.widget.Button');\nawait addDocumentButton.click();\nconsole.log(\"Step 4: Clicking on Insurance certificate option.\");\nconst Insurancecertificate = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/ic_btn\"]');\nawait Insurancecertificate.click();\nconsole.log(\"Step 5: Checking if the Upload button is enabled.\");\nconst uploadButton = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_upload_btn\"]');\nconst isUploadEnabled = await uploadButton.isEnabled();\nconsole.log(`Upload button enabled: ${isUploadEnabled}`);\nif (isUploadEnabled) {\n    console.log(\"Step 6: Clicking on the enabled Upload button.\");\n    await uploadButton.click();\n    console.log(\"Step 7: Navigating to the SD card and selecting the first PDF.\");\n    const file = await driver.$('(//android.widget.LinearLayout[@resource-id=\"com.google.android.documentsui:id/nameplate\"])[2]/android.widget.RelativeLayout');\n    await file.waitForDisplayed({ timeout: 5000 });\n    console.log(\"PDF file found.\");\n    await file.click();\n    await driver.pause(3000);\n    console.log(\"Step 8: Focusing on the File Name field and entering 'Insurance certificate'.\");\n    const fileNameField = await driver.$('//android.widget.EditText[@resource-id=\"com.simpleenergy.app:id/document_title2_edittext\"]');\n    await fileNameField.setValue(\"Insurance\");\n    console.log(\"Step 9: Checking if the Submit button is enabled.\");\n    const submitButton = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_save_btn\"]');\n    const isSubmitEnabled = await submitButton.isEnabled();\n    console.log(`Submit button enabled: ${isSubmitEnabled}`);\n    if (isSubmitEnabled) {\n        console.log(\"Step 10: Clicking the Submit button.\");\n        await submitButton.click();\n        await driver.pause(6000);\n        console.log(\"Document successfully submitted.\");\n        console.log(\"Step 11: Confirming the file is added.\");\n        const addedFile = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View[1]');\n        const isFileAdded = await addedFile.isDisplayed();\n        console.log(`File added: ${isFileAdded}`);\n        console.log(\"Step 12: Clicking the Delete button.\");\n        const deleteButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[2]/android.view.View/android.view.View[1]/android.view.View/android.widget.Button');\n        await deleteButton.click();\n        console.log(\"Step 13: Confirming deletion.\");\n        const confirmDelete = await driver.$('//android.widget.TextView[@resource-id=\"com.simpleenergy.app:id/clear_dialog_yes_btn\"]');\n        await confirmDelete.click();\n        await driver.pause(5000);\n        console.log(\"Step 14: Clicking the Back button.\");\n        const backButton = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.widget.Button');\n        await backButton.click();\n        const back = await driver.$('//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View[1]/android.widget.Button');\n        await back.click();\n        console.log(\"Process completed.\");\n    } else {\n        console.log(\"Submit button is not enabled. Exiting process.\");\n    }\n} else {\n    console.log(\"Upload button is not enabled. Exiting process.\");\n}",
              "err": {},
              "uuid": "4363d1aa-7260-4c68-b653-010984f0e2e8",
              "parentUUID": "1581cd16-e1b4-45c8-a5a9-53ef6728ba70",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "4363d1aa-7260-4c68-b653-010984f0e2e8"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "efb84e0a-52d8-4487-af39-f55deafa8408",
          "title": "Complete Test Suite",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should run all test files in sequence",
              "fullTitle": "Complete Test Suite should run all test files in sequence",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('All tests are imported and will run sequentially.');",
              "err": {},
              "uuid": "916dd633-f6c3-4ae9-93ca-4e830ffabe46",
              "parentUUID": "efb84e0a-52d8-4487-af39-f55deafa8408",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "916dd633-f6c3-4ae9-93ca-4e830ffabe46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "mocha-reports",
        "reportFilename": "report",
        "verbose": true
      },
      "version": "5.2.0"
    }
  }
}