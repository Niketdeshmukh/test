{
  "stats": {
    "suites": 3,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-20T11:56:39.339Z",
    "end": "2024-12-20T11:57:49.390Z",
    "duration": 70051,
    "testsRegistered": 3,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "c51e6187-007d-4e16-9e4b-7ff3f9b72933",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2ae86205-5f8a-400e-aac7-bae1febea4a5",
          "title": "Edit Details Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should edit details and save changes successfully\"",
              "fullTitle": "Edit Details Test \"before all\" hook for \"should edit details and save changes successfully\"",
              "timedOut": true,
              "duration": 30002,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(30000); // 30 seconds for setup\nconst capabilities = {\n    platformName: \"Android\",\n    \"appium:deviceName\": \"f60f2c3\",\n    \"appium:app\": \"./dev-release.apk\",\n    \"appium:automationName\": \"UiAutomator2\",\n    \"appium:newCommandTimeout\": 300,\n    \"appium:ensureWebviewsHavePages\": true,\n    \"appium:nativeWebScreenshot\": true,\n    \"appium:noReset\": true,\n    \"appium:ignoreHiddenApiPolicyError\": true,\n};\ndriver = await remote({\n    logLevel: 'info',\n    path: '/',\n    port: 4725,\n    capabilities,\n});\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);",
              "err": {
                "message": "Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs)",
                "estack": "Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs)\n    at listOnTimeout (node:internal/timers:594:17)\n    at process.processTimers (node:internal/timers:529:7)",
                "diff": null
              },
              "uuid": "14bab720-55ef-4158-8a19-1c051bcf8565",
              "parentUUID": "2ae86205-5f8a-400e-aac7-bae1febea4a5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Edit Details Test\"",
              "fullTitle": "Edit Details Test \"after all\" hook in \"Edit Details Test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Ending the edit details test session...\");\nif (driver) {\n    await driver.deleteSession();\n    console.log('Driver session closed.');\n} else {\n    console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "9988333a-b03c-4f7d-b109-206be45f5348",
              "parentUUID": "2ae86205-5f8a-400e-aac7-bae1febea4a5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should edit details and save changes successfully",
              "fullTitle": "Edit Details Test should edit details and save changes successfully",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"Waiting for the 'Edit Details' button to appear...\");\nawait driver.waitUntil(\n    async () => {\n        const editButton = await driver.$(\n            \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n        );\n        return await editButton.isExisting();\n    },\n    {\n        timeout: 15000,\n        timeoutMsg: \"'Edit Details' button not found within 15 seconds.\",\n    }\n);\nconsole.log(\"'Edit Details' button found. Clicking the button...\");\nconst editButton = await driver.$(\n    \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n);\nawait editButton.click();\nconsole.log(\"Waiting for the next screen with Name and Email fields...\");\nawait driver.waitUntil(\n    async () => {\n        const nameField = await driver.$(\n            'android=new UiSelector().className(\"android.widget.EditText\")'\n        );\n        return await nameField.isDisplayed();\n    },\n    {\n        timeout: 20000,\n        timeoutMsg: \"Name field not found within 20 seconds.\",\n    }\n);\nconsole.log(\"Filling in the Name and Email fields...\");\nconst nameField = await driver.$(\n    'android=new UiSelector().className(\"android.widget.EditText\")'\n);\nawait nameField.setValue(\"testingg\");\nconst emailField = await driver.$('//android.widget.ScrollView/android.widget.EditText[2]');\nawait emailField.click();\nawait emailField.clearValue();\nawait emailField.click();\nawait emailField.setValue('testing@gmail.com');\nconsole.log(\"Waiting for the 'Save Changes' button to appear...\");\nawait driver.waitUntil(\n    async () => {\n        const saveButton = await driver.$(\n            'android=new UiSelector().className(\"android.widget.Button\").instance(2)'\n        );\n        return await saveButton.isExisting();\n    },\n    {\n        timeout: 10000,\n        timeoutMsg: \"'Save Changes' button not found within 10 seconds.\",\n    }\n);\nconsole.log(\"'Save Changes' button found. Clicking the button...\");\nconst saveButton = await driver.$(\n    'android=new UiSelector().className(\"android.widget.Button\").instance(2)'\n);\nawait saveButton.click();\nconsole.log(\"Changes saved successfully!\");\n// const backButton = await driver.$('//android.widget.ScrollView/android.view.View[1]/android.widget.Button');\n// await backButton.click();\n// console.log(\"back button clicked\");",
              "err": {},
              "uuid": "2d119735-7e89-4989-be47-cfb3b1a80357",
              "parentUUID": "2ae86205-5f8a-400e-aac7-bae1febea4a5",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "2d119735-7e89-4989-be47-cfb3b1a80357"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "456f3a0f-8a95-4dc4-879c-2251fef4266b",
          "title": "Email Validation Test",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [
            {
              "title": "\"before all\" hook for \"should validate email addresses and set valid ones\"",
              "fullTitle": "Email Validation Test \"before all\" hook for \"should validate email addresses and set valid ones\"",
              "timedOut": true,
              "duration": 40000,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(40000);\nconst capabilities = {\n  platformName: 'Android',\n  'appium:deviceName': 'f60f2c3',\n  'appium:app': './dev-release.apk',\n  'appium:automationName': 'UiAutomator2',\n  'appium:newCommandTimeout': 300,\n  'appium:noReset': true,\n  'appium:ignoreHiddenApiPolicyError': true,\n};\ndriver = await remote({\n  logLevel: 'info',\n  path: '/',\n  port: 4725,\n  capabilities,\n});\nconsole.log('Driver setup complete, waiting for the app to load...');\nawait driver.pause(2000);",
              "err": {
                "message": "Error: Timeout of 40000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs)",
                "estack": "Error: Timeout of 40000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs)\n    at listOnTimeout (node:internal/timers:594:17)\n    at process.processTimers (node:internal/timers:529:7)",
                "diff": null
              },
              "uuid": "73c68d62-ffe8-425c-8f3b-4979d336af73",
              "parentUUID": "456f3a0f-8a95-4dc4-879c-2251fef4266b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Email Validation Test\"",
              "fullTitle": "Email Validation Test \"after all\" hook in \"Email Validation Test\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Ending the email validation test session...');\nif (driver) {\n  await driver.deleteSession();\n  console.log('Driver session closed.');\n} else {\n  console.log('Driver session not created. Skipping session cleanup.');\n}",
              "err": {},
              "uuid": "8f4153a4-9817-487e-8b5d-7f6eebdc3ac2",
              "parentUUID": "456f3a0f-8a95-4dc4-879c-2251fef4266b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should validate email addresses and set valid ones",
              "fullTitle": "Email Validation Test should validate email addresses and set valid ones",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('Navigating to the profile section...');\nconst profileButton = await driver.$(\n  \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.view.View/android.view.View/android.view.View[3]/android.view.View[2]\"\n);await profileButton.waitForDisplayed({ timeout: 20000 });\nawait driver.pause(1000);\nawait profileButton.click();\nconsole.log('Navigating to the \"Edit Details\" button...');\nconst editButton = await driver.$(\n  \"//androidx.compose.ui.platform.q1/android.view.View/android.view.View/android.widget.ScrollView/android.view.View[2]/android.view.View[2]/android.view.View/android.widget.Button\"\n);\nawait editButton.click();\nconst emailField = await driver.$('//android.widget.ScrollView/android.widget.EditText[2]');\nawait emailField.click();\nfor (const domain of emailDomains) {\n  const email = `testing@${domain}`;\n  const isValidEmail = emailRegex.test(email);\n  console.log(`Validation for email ${email}: ${isValidEmail ? 'Valid' : 'Invalid'}`);\n  if (isValidEmail) {\n    await emailField.clearValue();\n    await emailField.setValue(email);\n    console.log(`Email ${email} set in the field.`);\n  }\n  await driver.pause(500);\n}\nconst backButton = await driver.$('//android.widget.ScrollView/android.view.View[1]/android.widget.Button');\nawait backButton.click()",
              "err": {},
              "uuid": "1bc3b9ff-c1e5-48f1-b94f-c8f766accc22",
              "parentUUID": "456f3a0f-8a95-4dc4-879c-2251fef4266b",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "1bc3b9ff-c1e5-48f1-b94f-c8f766accc22"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4851ea46-3ccd-468f-97bd-89cea85579b1",
          "title": "Complete Test Suite",
          "fullFile": "/home/niketdeshmukh/Desktop/TEST/tests/cases/masterSuite.test.mjs",
          "file": "/cases/masterSuite.test.mjs",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should run all test files in sequence",
              "fullTitle": "Complete Test Suite should run all test files in sequence",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('All tests are imported and will run sequentially.');",
              "err": {},
              "uuid": "2288d8cc-d5a4-4b6f-a10e-a99af20ff08e",
              "parentUUID": "4851ea46-3ccd-468f-97bd-89cea85579b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2288d8cc-d5a4-4b6f-a10e-a99af20ff08e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "mocha-reports",
        "reportFilename": "report",
        "verbose": true
      },
      "version": "5.2.0"
    }
  }
}